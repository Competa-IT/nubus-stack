# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2025 Univention GmbH

global:
  ldap:
    auth:
      admin:
        existingSecret:
          name: "global.ldap.auth.admin.existingSecret.name"

postgresql:
  enabled: false
  provisioning:
    enabled: false
minio:
  enabled: false

nubusLdapServer:
  ldapServer:
    auth:
      existingSecret:
        name: "nubusLdapServer.ldapServer.auth.existingSecret.name"
        keyMapping:
          password: "nubusLdapServer.ldapServer.auth.existingSecret.keyMapping.password"

nubusPortalServer:
  portalServer:
    centralNavigation:
      auth:
        sharedSecret: nubusPortalServer.portalServer.centralNavigation.auth.sharedSecret
        existingSecret:
          name: nubusPortalServer.portalServer.centralNavigation.auth.existingSecret.name
          keyMapping:
            shared_secret: nubusPortalServer.portalServer.centralNavigation.auth.existingSecret.keyMapping.shared_secret
  objectStorage:
    auth:
      existingSecret:
        name: "nubusPortalServer.objectStorage.auth.existingSecret.name"
        keyMapping:
          access_key_id: "nubusPortalServer.objectStorage.auth.existingSecret.keyMapping.access_key_id"
          secret_access_key: "nubusPortalServer.objectStorage.auth.existingSecret.keyMapping.secret_access_key"
  udm:
    auth:
      existingSecret:
        name: "nubusPortalServer.udm.auth.existingSecret.name"
        keyMapping:
          password: "nubusPortalServer.udm.auth.existingSecret.keyMapping.password"

nubusProvisioning:
  nats:
    extraEnvVars:
      - name: NATS_UDM_LISTENER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.name"
            key: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.key"
      - name: NATS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.name"
            key: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.key"
      - name: NATS_PROVISIONING_API_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.name"
            key: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.key"
      - name: NATS_DISPATCHER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.name"
            key: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.key"
      - name: NATS_UDM_TRANSFORMER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.name"
            key: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.key"
      - name: NATS_PREFILL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.name"
            key: "nubusProvisioning.nats.extraEnvVars.udmListener.valueFrom.key"
  api:
    nats:
      auth:
        password: nubusProvisioningApi.api.nats.auth.password
        existingSecret:
          name: nubusProvisioningApi.api.nats.auth.existingSecret.name
          keyMapping:
            provisioningApiPassword: nubusProvisioningApi.api.nats.auth.existingSecret.keyMapping.provisioningApiPassword
    auth:
      admin:
        existingSecret:
          name: nubusProvisioningApi.api.auth.admin.existingSecret.name
          keyMapping:
            password: nubusProvisioningApi.api.auth.admin.existingSecret.keyMapping.password
      eventsUdm:
        password: nubusProvisioningApi.api.auth.eventsUdm.password
        existingSecret:
          name: nubusProvisioningApi.api.auth.eventsUdm.existingSecret.name
          keyMapping:
            password: nubusProvisioningApi.api.auth.eventsUdm.existingSecret.keyMapping.password
      prefill:
        password: nubusProvisioningApi.api.auth.prefill.password
        existingSecret:
          name: nubusProvisioningApi.api.auth.prefill.existingSecret.name
          keyMapping:
            password: nubusProvisioningApi.api.auth.prefill.existingSecret.keyMapping.password
  dispatcher:
    nats:
      auth:
        password: nubusProvisioningApi.dispatcher.nats.auth.password
        existingSecret:
          name: nubusProvisioningApi.dispatcher.nats.auth.existingSecret.name
          keyMapping:
            password: nubusProvisioningApi.dispatcher.nats.auth.existingSecret.keyMapping.password
  udmTransformer:
    nats:
      auth:
        password: nubusProvisioningApi.udmTransformer.nats.auth.password
        existingSecret:
          name: nubusProvisioningApi.udmTransformer.nats.auth.existingSecret.name
          keyMapping:
            password: nubusProvisioningApi.udmTransformer.nats.auth.existingSecret.keyMapping.password
  prefill:
    nats:
      auth:
        password: nubusProvisioningApi.prefill.nats.auth.password
        existingSecret:
          name: nubusProvisioningApi.prefill.nats.auth.existingSecret.name
          keyMapping:
            prefillPassword: nubusProvisioningApi.prefill.nats.auth.existingSecret.keyMapping.prefillPassword
  registerConsumers:
    createUsers:
      portalConsumer:
        existingSecret:
          name: "nubusProvisioningApi.registerConsumers.createUsers.portalConsumer.existingSecret.name"
          keyMapping:
            registration: "nubusProvisioningApi.registerConsumers.createUsers.portalConsumer.existingSecret.keyMapping.registration"
      selfserviceConsumer:
        existingSecret:
          name: "nubusProvisioningApi.registerConsumers.createUsers.selfserviceConsumer.existingSecret.name"
          keyMapping:
            registration: "nubusProvisioningApi.registerConsumers.createUsers.selfserviceConsumer.existingSecret.keyMapping.registration"

nubusUdmListener:
  ldap:
    tlsSecret:
      name: "nubusUdmListener.ldap.tlsSecret"
  nats:
    auth:
      existingSecret:
        name: "nubusUdmListener.nats.auth.existingSecret.name"
        keyMapping:
          password: "nubusUdmListener.nats.auth.existingSecret.keyMapping.password"

keycloak:
  keycloak:
    auth:
      existingSecret:
        name: "keycloak.keycloak.auth.existingSecret.name"
        keyMapping:
          adminPassword: "keycloak.keycloak.auth.existingSecret.keyMapping.adminPassword"
  postgresql:
    auth:
      existingSecret:
        name: "keycloak.postgresql.auth.existingSecret.name"
        keyMapping:
          password: "keycloak.postgresql.auth.existingSecret.keyMapping.password"

nubusKeycloakBootstrap:
  ldap:
    auth:
      existingSecret:
        name: "nubusKeycloakBootstrap.ldap.auth.existingSecret.name"
        keyMapping:
          password: "nubusKeycloakBootstrap.ldap.auth.existingSecret.name"
  keycloak:
    auth:
      existingSecret:
        name: "nubusKeycloakBootstrap.keycloak.auth.existingSecret.name"
        keyMapping:
          password: "nubusKeycloakBootstrap.keycloak.auth.existingSecret.name"

nubusTwofaHelpdesk:
  keycloak:
    auth:
      existingSecret:
        name: nubusTwofaHelpdesk.keycloak.auth.existingSecret.name"
        keyMapping:
          adminPassword: nubusTwofaHelpdesk.keycloak.auth.existingSecret.keyMapping.adminPassword"

nubusGuardian:
  managementApi:
    oauth:
      auth:
        existingSecret:
          name: "nubusGuardian.managementApi.oauth.auth.existingSecret.name"
          keyMapping:
            clientSecret: "nubusGuardian.managementApi.oauth.auth.existingSecret.keyMapping.clientSecret"
  postgresql:
    auth:
      existingSecret:
        name: "nubusGuardian.postgresql.auth.existingSecret.name"
        keyMapping:
          password: "nubusGuardian.postgresql.auth.existingSecret.keyMapping.password"
  provisioning:
    keycloak:
      auth:
        existingSecret:
          name: "nubusGuardian.provisioning.keycloak.auth.existingSecret.name"
          keyMapping:
            password: "nubusGuardian.provisioning.keycloak.auth.existingSecret.keyMapping.password"

nubusKeycloakExtensions:
  keycloak:
    auth:
      existingSecret:
        name: "nubusKeycloakExtensions.keycloak.auth.existingSecret.name"
        keyMapping:
          adminPassword: "nubusKeycloakExtensions.keycloak.auth.existingSecret.keyMapping.adminPassword"
  postgresql:
    auth:
      existingSecret:
        name: "nubusKeycloakExtensions.postgresql.auth.existingSecret.name"
        keyMapping:
          password: "nubusKeycloakExtensions.postgresql.auth.existingSecret.keyMapping.password"
  smtp:
    auth:
      existingSecret:
        name: "nubusKeycloakExtensions.smtp.auth.existingSecret.name"
        keyMapping:
          password: "nubusKeycloakExtensions.smtp.auth.existingSecret.keyMapping.password"

nubusNotificationsApi:
  postgresql:
    auth:
      existingSecret:
        name: "nubusNotificationsApi.postgresql.auth.existingSecret.name"

nubusPortalConsumer:
  provisioningApi:
    auth:
      existingSecret:
        name: "nubusPortalConsumer.provisioningApi.auth.existingSecret.name"
        keyMapping:
          password: "nubusPortalConsumer.provisioningApi.auth.existingSecret.keyMapping.password"
  objectStorage:
    auth:
      existingSecret:
        name: "nubusPortalConsumer.objectStorage.auth.existingSecret.name"
        keyMapping:
          access_key_id: "nubusPortalConsumer.objectStorage.auth.existingSecret.keyMapping.access_key_id"
          secret_access_key: "nubusPortalConsumer.objectStorage.auth.existingSecret.keyMapping.secret_access_key"

nubusSelfServiceConsumer:
  provisioningApi:
    auth:
      existingSecret:
        name: "nubusSelfServiceConsumer.provisioningApi.auth.existingSecret.name"
        keyMapping:
          password: "nubusSelfServiceConsumer.provisioningApi.auth.existingSecret.keyMapping.password"

nubusUmcServer:
  memcached:
    auth:
      existingPasswordSecret: "nubusUmcServer.memcached.auth.existingPasswordSecret"
      existingSecret:
        name: "nubusUmcServer.memcached.auth.existingSecret.name"
  postgresql:
    auth:
      existingSecret:
        name: "nubusUmcServer.postgresql.auth.existingSecret.name"
  smtp:
    auth:
      existingSecret:
        name: "nubusUmcServer.smtp.auth.existingSecret.name"
        keyMapping:
          password: "nubusUmcServer.smtp.auth.existingSecret.keyMapping.password"
  ldap:
    tlsSecret:
      name: "nubusUmcServer.ldap.tlsSecret.name"
