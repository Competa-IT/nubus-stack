# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

{{- $nubusMasterPassword := .Values.global.nubusMasterPassword | default "nubus" -}}
{{- $nubusMinioProvisioningSecrets := list
  (dict "name" "minio-provisioning" "stringData" (dict
    (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-listener-accesskey") | sha1sum | quote) (
      (
        printf "username=%s\npassword=%s\ndisabled=false\npolicies=%s\nsetPolicies=false"
          (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-listener-accesskey") | sha1sum)
          (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-listener-secretkey") | sha1sum)
          (index .Values.minio.provisioning.policies 0).name
        )| quote
      )
    (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-consumer-accesskey") | sha1sum | quote) (
      (
        printf "username=%s\npassword=%s\ndisabled=false\npolicies=%s\nsetPolicies=false"
          (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-consumer-accesskey") | sha1sum)
          (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-consumer-secretkey") | sha1sum)
          (index .Values.minio.provisioning.policies 0).name
        )| quote
      )
    (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-server-accesskey") | sha1sum | quote) (
      (
        printf "username=%s\npassword=%s\ndisabled=false\npolicies=%s\nsetPolicies=false"
          (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-server-accesskey") | sha1sum)
          (print (derivePassword 1 "long" $nubusMasterPassword "nubus" "portal-server-secretkey") | sha1sum)
          (index .Values.minio.provisioning.policies 0).name
        )| quote
      )
  ))
-}}

{{- range $secret := $nubusMinioProvisioningSecrets }}
---
kind: "Secret"
apiVersion: "v1"
type: {{ .type | default "Opaque" | quote }}
metadata:
  name: {{ printf "nubus-%s" .name | quote }}
  namespace: {{ include "common.names.namespace" $ | quote }}
  labels:
    {{- include "common.labels.standard" $ | nindent 4 }}
    {{- if $.Values.additionalLabels }}
    {{- include "common.tplvalues.render" ( dict "value" $.Values.additionalLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if $.Values.additionalAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $.Values.additionalAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
{{- if .data }}
data:
{{- range $k, $v := .data }}
  {{ $k }}: {{ $v | quote }}
{{- end }}
{{- end }}
{{- if .stringData }}
stringData:
{{- range $k, $v := .stringData }}
  {{ $k }}: {{ $v }}
{{- end }}
{{- end }}
...
{{- end }}
