# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH
---

# This file currently contains the set of required values to make a local
# deployment into an evaluation cluster possible. It assumes that the ingress
# controller "ingress-nginx" is in use.
#
# Long term this file shall be reduced again to the minimal set of required
# values so that "helm lint" can be successfully executed.

global:
  configMapUcrDefaults: "ums-stack-data-ums-ucr"
  configMapUcr: "ums-stack-data-swp-ucr"
  configMapUcrForced: null

guardian-authorization-api:
  guardianAuthorizationApi:
    guardianAuthzLoggingStructured: false
    oauthAdapterWellKnownUrl: "http://ums-keycloak:8080/realms/opendesk/.well-known/openid-configuration"
    opaAdapterUrl: "http://ums-open-policy-agent/"
    udmDataAdapterUrl: "http://ums-udm-rest-api/udm/"
    udmDataAdapterUsername: "cn=admin"
    udmDataAdapterPassword: "password"
  ingress:
    host: "portal.local-cluster.test"

guardian-management-api:
  guardianManagementApi:
    guardianManagementLoggingStructured: false
    guardianManagementAdapterAuthorizationApiUrl: "http://ums-guardian-authorization-api/guardian/authorization"
    guardianManagementBaseUrl: "http://localhost:8000"
    oauthAdapterM2mSecret: "password"
    oauthAdapterWellKnownUrl: "http://ums-keycloak:8080/realms/opendesk/.well-known/openid-configuration"
  ingress:
    host: "portal.local-cluster.test"

guardian-management-ui:
  guardianManagementUi:
    viteApiDataAdapterUri: "http://localhost:8000/guardian/management"
    # TODO: This needs a Keycloak specific value
    viteKeycloakAuthenticationAdapterSsoUri: "http://localhost:8000"
    viteKeycloakAuthenticationAdapterRealm: "opendesk"
  ingress:
    host: "portal.local-cluster.test"

open-policy-agent:
  openPolicyAgent:
    opaGuardianManagementUrl: "http://ums-guardian-management-api:8000/guardian/management"
  ingress:
    host: "portal.local-cluster.test"

ldap-notifier:
  volumes:
    claims:
      shared-data: "shared-data-ums-ldap-server-0"
      shared-run: "shared-run-ums-ldap-server-0"

ldap-server:
  ldapServer:
    ldapSecret: "password"
    ldapBaseDn: "dc=univention-organization,dc=intranet"

  extraVolumes:
    - name: "opendesk-schemas"
      configMap:
        name: "ums-stack-data-swp-schemas"

  extraVolumeMounts:
    - name: "opendesk-schemas"
      mountPath: "/var/lib/univention-ldap-local/local-schema/opendeskFileshare.schema"
      subPath: "opendeskFileshare.schema"
    - name: "opendesk-schemas"
      mountPath: "/var/lib/univention-ldap-local/local-schema/opendeskKnowledgemanagement.schema"
      subPath: "opendeskKnowledgemanagement.schema"
    - name: "opendesk-schemas"
      mountPath: "/var/lib/univention-ldap-local/local-schema/opendeskLearnmanagement.schema"
      subPath: "opendeskLearnmanagement.schema"
    - name: "opendesk-schemas"
      mountPath: "/var/lib/univention-ldap-local/local-schema/opendeskLivecollaboration.schema"
      subPath: "opendeskLivecollaboration.schema"
    - name: "opendesk-schemas"
      mountPath: "/var/lib/univention-ldap-local/local-schema/opendeskProjectmanagement.schema"
      subPath: "opendeskProjectmanagement.schema"

notifications-api:
  ingress:
    host: "portal.local-cluster.test"
    tls:
      enabled: false
  postgresql:
    nameOverride: "notifications-api-postgresql"
    auth:
      password: "password"
      postgresPassword: "password"

portal-frontend:
  extraIngresses:
    redirects:
      enabled: true
    workaround:
      enabled: true
    # See "extraVolumeMounts" below
    custom-favicon:
      enabled: true
      annotations:
        nginx.org/mergeable-ingress-type: "minion"
      paths:
        - pathType: Exact
          path: /favicon.ico
      tls: {}
    # See "extraVolumeMounts" below
    custom-branding:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/configuration-snippet: |
          rewrite ^/univention/portal(/.*)$ $1 break;
        nginx.org/location-snippets: |
          rewrite ^/univention/portal(/.*)$ $1 break;
        nginx.org/mergeable-ingress-type: "minion"
      paths:
        # This relies on the correct implementation of the matching for paths of
        # type "Prefix" since "/univention/portal/icons/entries/" is owned by
        # store-dav.
        # See: https://kubernetes.io/docs/concepts/services-networking/ingress/#multiple-matches
        - pathType: Prefix
          path: /univention/portal/icons/
        - pathType: Prefix
          path: /univention/portal/custom/
      tls: {}
  extraVolumes:
    - name: "opendesk-branding"
      configMap:
        name: "ums-stack-data-swp-branding"
  extraVolumeMounts:
    - name: "opendesk-branding"
      mountPath: "/var/www/html/favicon.ico"
      subPath: "favicon.ico"
    - name: "opendesk-branding"
      mountPath: "/var/www/html/css/custom.css"
      subPath: "custom.css"
    - name: "opendesk-branding"
      mountPath: "/var/www/html/icons/logo.svg"
      subPath: "logo.svg"
    - name: "opendesk-branding"
      mountPath: "/var/www/html/icons/logo_small_border.svg"
      subPath: "logo_small_border.svg"
    - name: "opendesk-branding"
      mountPath: "/var/www/html/custom/portal_background_image.png"
      subPath: "portal_background_image.png"
    - name: "opendesk-branding"
      mountPath: "/var/www/html/custom/portal_background_image.svg"
      subPath: "portal_background_image.svg"
  ingress:
    host: "portal.local-cluster.test"
    tls:
      enabled: false

portal-listener:
  portalListener:
    assetsRoot: "http://portal-listener:password@ums-store-dav/portal-assets/"
    adminGroup: "cn=Domain Admins,cn=groups,dc=univention-organization,dc=intranet"
    ucsInternalUrl: "http://portal-server:password@ums-store-dav/portal-data"
    udmApiUrl: "http://ums-udm-rest-api/udm/"
    udmApiUsername: "cn=admin"
    umcGetUrl: "http://ums-umc-server/get"
    umcSessionUrl: "http://ums-umc-server/get/session-info"
    ldapHost: "ums-ldap-server"
    notifierServer: "ums-ldap-notifier"
    ldapBaseDn: "dc=univention-organization,dc=intranet"
    portalDefaultDn: "cn=domain,cn=portal,cn=portals,cn=univention,dc=univention-organization,dc=intranet"
    ldapHostDn: "cn=admin,dc=univention-organization,dc=intranet"
    ldapSecret: "password"
    machineSecret: "password"
    tlsMode: "off"

  store-dav:
    bundled: false

portal-server:
  portalServer:
    adminGroup: "cn=Domain Admins,cn=groups,dc=univention-organization,dc=intranet"
    ucsInternalUrl: "http://portal-server:password@ums-store-dav/portal-data"
    umcGetUrl: "http://ums-umc-server/get"
    umcSessionUrl: "http://ums-umc-server/get/session-info"
  ingress:
    host: "portal.local-cluster.test"
    tls:
      enabled: false

provisioning:
  events-and-consumer-api:
    nameOverride: "provisioning-events-and-consumer-api"
    ingress:
      host: "portal.local-cluster.test"
      tls:
        enabled: false
    config:
      logLevel: "DEBUG"
      rootPath: "/univention/provisioning-api"
      natsHost: "ums-provisioning-nats"
      natsPort: 4222
    # TODO: Usage of "common.names.dependency.fullname" expects this
    nats:
      nameOverride: "provisioning-nats"

  dispatcher:
    nameOverride: "provisioning-dispatcher"
    config:
      natsHost: "ums-provisioning-nats"
      natsPort: 4222
    # TODO: Usage of "common.names.dependency.fullname" expects this
    nats:
      nameOverride: "provisioning-nats"
    # TODO: The probes are not working
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false

  udm-listener:
    nameOverride: "provisioning-listener"
    config:
      debugLevel: "4"
      ldapBaseDn: "dc=univention-organization,dc=intranet"
      ldapHost: "ums-ldap-server"
      ldapHostDn: "cn=admin,dc=univention-organization,dc=intranet"
      ldapPassword: "password"
      ldapPort: "389"
      natsHost: "ums-provisioning-nats"
      natsPort: 4222
      notifierServer: "ums-ldap-notifier"
      tlsMode: "off"

  nats:
    nameOverride: "provisioning-nats"

stack-data-ums:
  stackDataUms:
    udmApiPassword: "password"
    udmApiUrl: "http://ums-udm-rest-api/udm/"
    loadDevData: true
  stackDataContext:
    initialPasswordAdministrator: "univention!1"
    initialPasswordSysIdpUser: "univention!1"
    ldapHost: "ums-ldap-server"

stack-data-swp:
  stackDataSwp:
    udmApiPassword: "password"
    udmApiUrl: "http://ums-udm-rest-api/udm/"
    loadDevData: true
  stackDataContext:
    userPassword: "univention!1"
    adminPassword: "univention!1"
    ldapSearchUsers:
      - username: "ldapsearch_keycloak"
        password: "univention!1"
      # TODO: We need typically more entries, compare opendesk setup

store-dav:
  storeDav:
    auth:
      basicAuth:
        portal-server: "password"
        portal-listener: "password"
  ingress:
    host: "portal.local-cluster.test"
    tls:
      enabled: false

udm-rest-api:
  udmRestApi:
    ldapSecret: "password"
    machineSecret: "password"
  extraVolumes:
    - name: "attribute-to-group-mapper-hook"
      configMap:
        name: "ums-stack-data-swp-attribute-to-group-mapper-hook"
  extraVolumeMounts:
    - name: "attribute-to-group-mapper-hook"
      mountPath: "/usr/lib/python3/dist-packages/univention/admin/hooks.d/AttributeToGroupMapper.py"
      subPath: "AttributeToGroupMapper.py"
    - name: "attribute-to-group-mapper-hook"
      mountPath: "/usr/share/attribute-to-group-mapper/flag_to_group_mapping.json"
      subPath: "flag_to_group_mapping.json"
  ingress:
    host: "portal.local-cluster.test"
    tls:
      enabled: false

umc-gateway:
  umcGateway:
    umcHtmlTitle: "openDesk - Admin"
  extraVolumes:
    - name: "entrypoint-swp-patches"
      configMap:
        name: "ums-stack-data-swp-umc-gateway-entrypoint"
        defaultMode: 0555
    - name: "announcements-customization"
      configMap:
        name: "ums-stack-data-swp-umc-server-announcements"
        defaultMode: 0444
  extraVolumeMounts:
    - name: "entrypoint-swp-patches"
      mountPath: "/entrypoint.d/90-swp.sh"
      subPath: "90-swp.sh"
    - name: "announcements-customization"
      mountPath:
        "/usr/share/univention-management-console-frontend/js/dijit/themes\
        /umc/icons/16x16/udm-portals-announcement.png"
      subPath: "udm-portals-announcement.png"
  ingress:
    host: "portal.local-cluster.test"
    tls:
      enabled: false

umc-server:
  umcServer:
    ldapSecret: "password"
    machineSecret: "password"
  extraVolumes:
    - name: "entrypoint-swp-patches"
      configMap:
        name: "ums-stack-data-swp-umc-server-entrypoint"
        defaultMode: 0555
    - name: "self-service-emails"
      configMap:
        name: "ums-stack-data-swp-self-service-emails"
        defaultMode: 0444
    - name: "attribute-to-group-mapper-hook"
      configMap:
        name: "ums-stack-data-swp-attribute-to-group-mapper-hook"
    - name: "announcements-customization"
      configMap:
        name: "ums-stack-data-swp-umc-server-announcements"
        defaultMode: 0444
  extraVolumeMounts:
    - name: "entrypoint-swp-patches"
      mountPath: "/entrypoint.d/90-customization.sh"
      subPath: "90-customization.sh"
    - name: "self-service-emails"
      mountPath: "/usr/share/univention-self-service/email_bodies"
    - name: "attribute-to-group-mapper-hook"
      mountPath: "/usr/lib/python3/dist-packages/univention/admin/hooks.d/AttributeToGroupMapper.py"
      subPath: "AttributeToGroupMapper.py"
    - name: "attribute-to-group-mapper-hook"
      mountPath: "/usr/share/attribute-to-group-mapper/flag_to_group_mapping.json"
      subPath: "flag_to_group_mapping.json"
    - name: "announcements-customization"
      mountPath: "/usr/share/univention-management-console/modules/udm-portals-announcement.xml"
      subPath: "udm-portals-announcement.xml"
  ingress:
    host: "portal.local-cluster.test"
    tls:
      enabled: false
  postgresql:
    nameOverride: "umc-server-postgresql"
    auth:
      password: "password"
      postgresPassword: "password"
  memcached:
    nameOverride: "umc-server-memcached"
    auth:
      password: "password"

keycloak:
  config:
    admin:
      password: "password"
    database:
      host: "ums-keycloak-postgresql"
      port: 5432
      username: "keycloak"
      database: "keycloak"
      password: "password"

keycloak-bootstrap:
  enabled: false
  global:
    domain: "local-cluster.test"
    hosts:
      keycloak: "id"
  config:
    keycloak:
      adminUser: "kcadmin"
      adminPassword: "password"
      realm: "opendesk"
      intraCluster:
        enabled: true
        internalBaseUrl: "http://ums-keycloak:8080"
      loginLinks:
        - link_number: 1
          language: "de"
          description: "Passwort vergessen?"
          href: "http://portal.local-cluster.test/univention/portal/#/selfservice/passwordforgotten"
        - link_number: 1
          language: "en"
          description: "Forgot password?"
          href: "http://portal.local-cluster.test:8000/univention/portal/#/selfservice/passwordforgotten"
    ums:
      ldap:
        internalHostname: "ums-ldap-server"
        baseDN: "dc=univention-organization,dc=intranet"
        readUserDN: "uid=ldapsearch_keycloak,cn=users,dc=univention-organization,dc=intranet"
        readUserPassword: "password"
        mappers:
          - ldapAndUserModelAttributeName: "opendeskProjectmanagementAdmin"
          - ldapAndUserModelAttributeName: "oxContextIDNum"
      saml:
        serviceProviderHostname: "portal.local-cluster.test:8443"
    twoFactorAuthentication:
      enabled: true
      group: "2fa-users"

keycloak-extensions:
  global:
    keycloak:
      host: "ums-keycloak:8080"
      adminUsername: "kcadmin"
      adminPassword: "password"
      adminRealm: "master"
      # TODO: Bootstrap of the realm is pending
      # realm: "opendesk"
      realm: "master"
    postgresql:
      connection:
        host: "ums-keycloak-postgresql"
        port: 5432
      auth:
        database: "keycloak"
        username: "keycloak"
        password: "password"
  handler:
    nameOverride: "keycloak-extensions-handler"
    appConfig: {}
  postgresql:
    enabled: false
  proxy:
    nameOverride: "keycloak-extensions-proxy"
    ingress:
      annotations:
        nginx.org/proxy-buffer-size: "8k"
        nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
      paths:
        - pathType: "Prefix"
          path: "/realms"
        - pathType: "Prefix"
          path: "/resources"
        - pathType: "Prefix"
          path: "/fingerprintjs"
      enabled: true
      ingressClassName: "nginx"
      host: "id.local-cluster.test"
      tls:
        enabled: false
        secretName: ""

keycloak-postgresql:
  auth:
    username: "keycloak"
    database: "keycloak"
    password: "password"
    postgresPassword: "password"

tags:
  pre-release: true
